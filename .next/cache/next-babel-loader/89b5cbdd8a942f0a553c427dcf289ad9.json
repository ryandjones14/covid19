{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  console.log('new url in use stats util', url);\n  useEffect(function () {\n    setLoading(true);\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              })[\"catch\"](function (err) {\n                setError(err);\n              }));\n\n            case 2:\n              data = _context.sent;\n              setLoading(false);\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["/Users/ryanjones/code/react/covid19app/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","fetch","then","response","json","err","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENL,QAAQ,CAAC,KAAD,CAFF;AAAA,MAE7BM,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGVP,QAAQ,EAHE;AAAA,MAG7BQ,KAH6B;AAAA,MAGtBC,QAHsB;;AAKpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCR,GAAzC;AACAF,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,aAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBC,KAAK,CAACV,GAAD,CAAL,CAAWW,IAAX,CAAgB,UAACC,QAAD,EAAc;AAC/C,uBAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,eAFkB,WAEV,UAACC,GAAD,EAAS;AAChBR,gBAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,eAJkB,CADrB;;AAAA;AACQC,cAAAA,IADR;AAMEX,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,cAAAA,QAAQ,CAACa,IAAD,CAAR;;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQC;AACDN,IAAAA,SAAS;AACV,GAZQ,EAYN,CAACT,GAAD,CAZM,CAAT;AAaA,SAAO;AACLC,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,OAAO,EAAPA,OAFK;AAGLE,IAAAA,KAAK,EAALA;AAHK,GAAP;AAKD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n\n  console.log('new url in use stats util', url);\n  useEffect(() => {\n    setLoading(true);\n    async function fetchData() {\n      const data = await fetch(url).then((response) => {\n        return response.json();\n      }).catch((err) => {\n        setError(err);\n      });\n      setLoading(false);\n      setStats(data);\n    };\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error,\n  };\n}"]},"metadata":{},"sourceType":"module"}