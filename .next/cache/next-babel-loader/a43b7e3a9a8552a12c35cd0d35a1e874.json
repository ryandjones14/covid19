{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default function useCountries(url) {\n  var _useState = useState(),\n      countries = _useState[0],\n      setCountries = _useState[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('fetching countries');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (response) {\n                return response.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setCountries([data]);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    ;\n    fetchData();\n  }, []);\n  return countries;\n}","map":{"version":3,"sources":["/Users/ryanjones/code/react/covid19app/utils/useCountries.js"],"names":["useState","useEffect","useCountries","url","countries","setCountries","fetchData","console","log","fetch","then","response","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAAA,kBACNH,QAAQ,EADF;AAAA,MACjCI,SADiC;AAAA,MACtBC,YADsB;;AAGxCJ,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AADF;AAAA,+CAEqBC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,QAAQ;AAAA,uBACzCA,QAAQ,CAACC,IAAT,EADyC;AAAA,eAAxB,CAFrB;;AAAA;AAEQC,cAAAA,IAFR;AAKER,cAAAA,YAAY,CAAC,CAACQ,IAAD,CAAD,CAAZ;;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMC;AACDP,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAUA,SAAOF,SAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useCountries(url) {\n  const [countries, setCountries] = useState();\n\n  useEffect(() => {\n    async function fetchData() {\n      console.log('fetching countries');\n      const data = await fetch(url).then(response =>\n        response.json()\n      );\n      setCountries([data]);\n    };\n    fetchData();\n  }, []);\n  return countries;\n}"]},"metadata":{},"sourceType":"module"}